env:
    # 数据库
    MYSQL_IP0: 127.0.0.1
    MYSQL_PORT: 3306
    MYSQL_USER: root
    MYSQL_PASS: root
    # Redis 集群配置 2选1，集群方式需要在common.yml中开启注释
    REDIS_PASS: root
    REDIS_IP: 127.0.0.1
    REDIS_PORT: 6379
    REDIS_DB: 0
    # RabbitMQ 配置 common.yml
    RABBITMQ_HOST: 127.0.0.1
    RABBITMQ_PORT: 5672
    RABBITMQ_VHOST: mq
    RABBITMQ_USERNAME: test
    RABBITMQ_PASSWORD: test
    # DevOps平台配置 common.yml
    BKCI_FQDN: devops.bk.tencent.com
    BKCI_HOST: bkci-gateway
    LOGIN_SERVICE_URL: 
    BKCI_FQDN_V1: ''
    BKCI_HTTP_PORT: 80
    HTTP_SCHEMA: http
    # 如果有启用HTTPS才配置有效
    BKCI_HTTPS_PORT: 443
    # 各微服务的HTTP端口 application-{service}.yml {service}.sh
    BKCI_NOTIFY_API_PORT: 21911
    BKCI_PROJECT_API_PORT: 21912
    BKCI_LOG_API_PORT: 21914
    BKCI_TICKET_API_PORT: 21915
    BKCI_REPOSITORY_API_PORT: 21916
    BKCI_STORE_API_PORT: 21918
    BKCI_ENVIRONMENT_API_PORT: 21919
    BKCI_ARTIFACTORY_API_PORT: 21920
    BKCI_PROCESS_API_PORT: 21921
    BKCI_DISPATCH_API_PORT: 21922
    BKCI_DOCKERHOST_API_PORT: 21923
    BKCI_PLUGIN_API_PORT: 21925
    BKCI_WEBSOCKET_API_PORT: 21926
    BKCI_MISC_API_PORT: 21927
    BKCI_QUALITY_API_PORT: 21928
    BKCI_IMAGE_API_PORT: 21933
    BKCI_OPENAPI_API_PORT: 21935
    BKCI_AUTH_API_PORT: 21936
    BKCI_MONITORING_API_PORT: 21929
    ## ES 相关信息  application-log.yml
    BKCI_ES_IP: 127.0.0.1
    BKCI_ES_PORT: 9300
    BKCI_ES_CLUSTER: docker-cluster
    # consul 相关配置  init.lua 和 common.yml
    BKCI_CONSUL_PORT: 8500
    BKCI_CONSUL_TAG: ci
    BKCI_CONSUL_DOMAIN: ci
    BKCI_CONSUL_DNS_PORT: 8600
    BKCI_CONSUL_GRAY_IP: 127.0.0.1
    BKCI_CONSUL_DEVNET_GRAY_IP: 127.0.0.1
    BK_CI_CONSUL_SERVER: consul-server
    # influxDB 配置， 用于构建机详情上报
    INFLUXDB_SERVER: #influxDB服务器地址
    INFLUXDB_USERNAME: #influxDB用户名
    INFLUXDB_PASSWORD: #influxDB用户名
    AGENT_COLLECTOR_ON: #false
    # docker相关
    DOCKER_REGISTRY_URL: docker.io
    DOCKER_REGISTRY_USERNAME:  #dockerhub帐号
    DOCKER_REGISTRY_PASSWORD:   #dockerhub帐号密码
    # docker dispatch 配置镜像下载前缀
    DOCKER_IMAGE_PREFIX: dockerhub镜像下载地址
    DOCKER_PORT: 8090
    # process 引擎事件处理并发数量
    PROCESS_EVENT_CONCURRENT: 10
    # 蓝鲸PaaS平台配置
    PAAS_FQDN: pass.bk.tencent.com #蓝鲸PaaS域名
    PAAS_HTTP_PORT: 80 #蓝鲸HTTP端口
    PAAS_HTTPS_PORT: 443 #蓝鲸HTTPS端口，当HTTP_SCHEMA=http时,PAAS_HTTPS_PORT=PAAS_HTTP_PORT
    # 对接权限中心的配置 -- 如果用户要对接权限中心  init.lua
    IAM_IP0: #权限中心IP地址，比如蓝鲸权限中心地址
    IAM_HTTP_PORT: #权限中心端口，比如蓝鲸权限中心端口
    IAM_ENV: 'prod'
    IAM_HOST: ''
    IAM_TOKEN_URL: '/bkiam/api/v1/auth/access-tokens'
    # ESB相关 自己应用在蓝鲸中的APPCode，需要对接蓝鲸时
    APP_CODE: #比如DevOps的AppCode是devops
    APP_TOKEN: #对应的Token
    # ------------------非必填------------------
    # 自搭建的GitLab仓库 -- 用户自己部署的gitlab仓库  application-repository.yml
    GITLAB_URL: ''
    # 根据用户需要决定修改的占位符
    # GitHub 配置，可有可无，看用户需要   application-repository.yml
    DEVOPS_GIT_PLUGIN_GROUP_NAME: #创建的插件所在代码库分组，通过代码库管理流水线伯时配置，暂时无用
    DEVOPS_GIT_PRIVATE_TOKEN: #创建的插件所在代码库用的身份Token，通过代码库管理流水线伯时配置，暂时无用
    GIT_URL: #暂时没用，用于插件仓库的Git地址
    GITHUB_SIGN_SECRET: #填写你自己创建GitHubApp密钥
    GITHUB_APP: #填写你自己创建GitHubApp
    GITHUB_CLIENT_ID: #填写你自己创建GitHubApp的ClientID
    GITHUB_CLIENT_SECRET: #填写你自己创建GitHubApp的Client密钥
    # SVN配置 -- 如果用户有使用 application-repository.yml
    SVN_URL: #SVN地址
    SVN_API_KEY: #SVN的API密钥
    # RSA证书
    BKCI_RSA_PUBLIC_KEY: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvxv5yGPdlOVTSc+Ttpr+n3RBraXe2s07ea9YtWPhxMfzu1vy0mrtQDRkJk/XS0L8H94RRKwn6nq3BmnI4xIz+tuCGrNlGeBHWl0Lo4o225ZoRPDWkcM9XIk81N2HLJz8lOoWGYMztkCD8BtKsuSmvZtQoqTTw9bBfq8zpD6NcsoGOp+k9a0CCwl3O9L4/D9Pa7/yDiWcA0iSPc9ptBFyrgjJG5/LxAmDMLDgaD1V6CY7Bgjg7Op/yTv0eKqKpS/fwktTMHpuPZvxQ6gcOIY0JG0cEvVnHSgZWmddqLQYj/BN4F4VdxHWXmDf8BKzn28yygrDhGAc9lwFTx6xSDEF1wIDAQAB
    BKCI_RSA_PRIVATE_KEY: MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC/G/nIY92U5VNJz5O2mv6fdEGtpd7azTt5r1i1Y+HEx/O7W/LSau1ANGQmT9dLQvwf3hFErCfqercGacjjEjP624Ias2UZ4EdaXQujijbblmhE8NaRwz1ciTzU3YcsnPyU6hYZgzO2QIPwG0qy5Ka9m1CipNPD1sF+rzOkPo1yygY6n6T1rQILCXc70vj8P09rv/IOJZwDSJI9z2m0EXKuCMkbn8vECYMwsOBoPVXoJjsGCODs6n/JO/R4qoqlL9/CS1Mwem49m/FDqBw4hjQkbRwS9WcdKBlaZ12otBiP8E3gXhV3EdZeYN/wErOfbzLKCsOEYBz2XAVPHrFIMQXXAgMBAAECggEAfesD6EoMnGeBOjff/sgfDpb+E1kf/hCNqH6lN1bpUcvhRsittICpc81RU4D1vOwUzTZ3MEUyQ6e5YitfJmY/A4GQNuGOsr74pIx797RAsuxmJU5+QipfCtKN1z9jKj0Bm2ilSQgOkX3usMx6qmZHitSEC7YIpZehhEQSBZ0Fe+SG51eEYmX3lXJ6Cx04wQkkygf3WX60/OQt15oKMe53weICM4vy1d73Iz5+uh7bvIr3gctvsno3xD166Tkuw4kSYx6ayEmU9o7YaVBkklHEMZqlWQWeiKAHrhbDbC/9YhOzUj4o+xjkQNUhINXCUL7VOsfgkFG4DNsFQefqoXAk4QKBgQDoHiC+VPXqVYcb2hh4TPKir7yhG45gJ/1OT6emow7lUvG4waeuxfBMe3Scaj62elow0Of9wJydl2qr+h9WWZUtF9XJsT0IaVY/8T9ugSjVo5LC4JbEoDaP7IZMNSYAGbVWeHdJBY/gkksuVBDQWOqtswS12nE/1q4jDkIcCNpEZwKBgQDSxbSV26MGTmrmmRZs5M+hk217bD5x+wdI0ROZqWeowufxggcD6//2yot0A/wiNcAcgqT12TRZEiJLso3iUTayJJxVgSKCqKg7IroT+StgcJR+KD5yBtsKy4eS7Md+AuPlyuMuTd22x03X2UF26SX3Qgvfhtux0wLSPCK1XDTNEQKBgQCiDA598iBwhV86oYr9yXKHAzskGnHOTXy5BEEdw65tiPd6LbBcApIdQv8JB99aU5bNh7q+W467Mm9lOsxP42CSx5YYJeVfDvMI1uqawg74/yZBaLu478THu6+SWnR6E3iWsqlMUFa+yEM2R7gpTDoiI92A+8yebcjKbnTWz5NZtwKBgEowROwqrytdFsusPvR9ZYgd+H9lDmXYUiwTS67erhn84N9lQUrkGuinSoa/kFQKT2C5q47NsVtYwrGaW865f2Mc99ow5hDPhMer5Yt6PQZpGht91t0UBK28DjBtH5r/MXCFBYoa5lubs46ybhSI5FAv8zXupg3llCyj9iOYHQ3BAoGALf62wyNooJ52XJYtC+C/HCJ3sDUVOgC5+PdCNAxzsDRpMEjfeVYpx9e4pXqEk6s+3ZNFcCYgwFZ9MTK1QRFgn/3j0PGXADX9+F5riYEdPlTKk9l5psUcMe+Y+/Gfb0FesjeNq8f2z3zzGD5bLCKdtEcL0GO/9r0IrJ/SWxIftzc=
    # DNS服务配置
    BKCI_RESOVLER: "127.0.0.1:8600" # 默认指向本地127.0.0.1的consul的8600 UDP端口，部署时需要修改成可用的DNS服务器
    # codecc
    CODECC_HOST: "127.0.0.1"
    CODECC_HTTP_PORT: "80"
    CODECC_FQDN: "127.0.0.1"
    CODECC_HTTPS_PORT: "443"